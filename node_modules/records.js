const {EventEmitter} = require("events");//引入套件 後 傳遞套件 給 {EventEmitter}
 
let instance;
let data = []; //裝有幾筆紀錄
let MAX = 50;//最多紀錄筆數
 
class Records extends EventEmitter { //Records 繼承 套件
    constructor () { //建構子
        super();//繼承父屬性,方法
    }
 
    push (msg) { //把拿到的資料 msg 進行堆疊 
        data.push(msg); //推進堆疊
 
        if (data.length > MAX) { //紀錄筆數 > 最多紀錄筆數
            data.splice(0, 1);  //把堆疊最上面的那筆資料 當作添加資料
        }
 
        this.emit("new_message", msg);// 新增函數返回 堆疊最上面的那筆資料 當作添加資料
    }
 
    get () {//拿到全部筆數
        return data;
    }
 
    setMax (max) {//設置最多筆數
        MAX = max;
    }
 
    getMax () {//回傳最多筆數
        return MAX;
    }
}
 
module.exports = (function () { //引用完套件後,寫函數,可以直接呼叫函數使用
    if (!instance) { //如果 instance不是 Records物件
        instance = new Records(); //就新增物件
    }
 
    return instance; //回傳物件
})();